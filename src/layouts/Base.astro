---
import "@styles/matrixAnimations.css";
import Footer from "@components/Footer.astro";
import Navigation from "@components/Navigation.astro";

import type { PageMeta } from "@src/consts";

export interface Props {
  title?: string;
  description?: string;
  keywords?: string[];
  windowTitle?: string;
  terminalCommand?: string;
  systemMessage?: string;
}

const {
  title = "Matrix Terminal",
  description = "Matrix-themed Hacker Terminal Interface",
  keywords = ["matrix", "terminal", "strava", "juan diaz"],
  windowTitle = "NEURAL_INTERFACE_v2.1",
  terminalCommand = "./boot_system.exe",
  systemMessage = "[SYSTEM] Initializing neural pathways...",
} = Astro.props;

const currentPath = Astro.url.pathname;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="author" content="Juan Diaz" />
    <meta name="keywords" content={keywords.join(", ")} />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <title>{title}</title>
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-9ZZXEM92EB" is:inline></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-9ZZXEM92EB');
    </script>
  </head>
  <body class="bg-black text-green-400 font-mono overflow-x-hidden">
    <!-- Matrix Rain Background -->
    <div class="fixed inset-0 pointer-events-none z-0">
      <div class="matrix-rain"></div>
      <div class="matrix-grid-overlay"></div>
      <div class="scanlines"></div>
    </div>

    <!-- Main Terminal Container -->
    <div class="min-h-screen p-2 sm:p-4 relative z-10">
      <!-- Terminal Window Frame -->
      <div class="terminal-window max-w-7xl mx-auto">
        <!-- Window Title Bar -->
        <div class="window-titlebar">
          <div class="window-controls">
            <div class="control-button close"></div>
            <div class="control-button minimize"></div>
            <div class="control-button maximize"></div>
          </div>
          <div class="window-title">
            <span class="text-green-400 text-sm font-bold">
              [{windowTitle}]
            </span>
          </div>
          <div class="system-info hidden sm:block">
            <span class="text-green-500 text-xs"> MATRIX_OS v2.1 </span>
          </div>
        </div>

        <Navigation currentPath={currentPath} />

        <!-- Terminal Header -->
        <div class="terminal-header">
          <div class="flex items-center space-x-2 mb-2">
            <div class="text-green-400 text-sm">root@matrix:~$</div>
            <div class="text-green-300 text-sm">{terminalCommand}</div>
          </div>
          <div class="text-green-500 text-xs opacity-80">
            {systemMessage}
          </div>
          <div class="terminal-separator"></div>
        </div>

        <!-- Terminal Content Area -->
        <div class="terminal-content">
          <main class="content-area">
            <slot />
          </main>

          <Footer />
        </div>
      </div>
    </div>

    <style>
      /* Matrix Rain Animation */
      .matrix-rain {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: linear-gradient(
          to bottom,
          transparent 0%,
          rgba(0, 255, 0, 0.1) 50%,
          transparent 100%
        );
        opacity: 0.3;
        animation: matrixRainFall 20s linear infinite;
      }

      .matrix-rain::before {
        content: "01010101010101010101010101010101010101010101010101010101010101010101010101010101";
        position: absolute;
        top: -100px;
        left: 0;
        width: 100%;
        height: calc(100% + 200px);
        font-size: 12px;
        line-height: 20px;
        color: rgba(0, 255, 0, 0.3);
        animation: matrixRainDrop 15s linear infinite;
        word-wrap: break-word;
        font-family: "Courier New", monospace;
      }

      @keyframes matrixRainFall {
        0% {
          transform: translateY(-100vh);
        }
        100% {
          transform: translateY(100vh);
        }
      }

      @keyframes matrixRainDrop {
        0% {
          opacity: 0;
          transform: translateY(-200px);
        }
        10% {
          opacity: 1;
        }
        90% {
          opacity: 1;
        }
        100% {
          opacity: 0;
          transform: translateY(calc(100vh + 200px));
        }
      }

      /* Grid Overlay */
      .matrix-grid-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image:
          repeating-linear-gradient(
            0deg,
            transparent,
            transparent 30px,
            rgba(0, 255, 0, 0.03) 30px,
            rgba(0, 255, 0, 0.03) 32px
          ),
          repeating-linear-gradient(
            90deg,
            transparent,
            transparent 30px,
            rgba(0, 255, 0, 0.03) 30px,
            rgba(0, 255, 0, 0.03) 32px
          );
        animation: gridShift 30s linear infinite;
      }

      @keyframes gridShift {
        0% {
          transform: translate(0, 0);
        }
        100% {
          transform: translate(30px, 30px);
        }
      }

      /* Scanlines */
      .scanlines {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: repeating-linear-gradient(
          0deg,
          transparent,
          transparent 2px,
          rgba(0, 255, 0, 0.05) 2px,
          rgba(0, 255, 0, 0.05) 4px
        );
        animation: scanlineMove 2s linear infinite;
        pointer-events: none;
      }

      @keyframes scanlineMove {
        0% {
          transform: translateY(0);
        }
        100% {
          transform: translateY(4px);
        }
      }

      /* Terminal Window */
      .terminal-window {
        background: linear-gradient(
          135deg,
          rgba(0, 0, 0, 0.95) 0%,
          rgba(0, 20, 0, 0.9) 100%
        );
        border: 2px solid rgba(0, 255, 0, 0.4);
        border-radius: 8px;
        box-shadow:
          0 0 20px rgba(0, 255, 0, 0.3),
          inset 0 0 20px rgba(0, 255, 0, 0.1);
        backdrop-filter: blur(10px);
        min-height: calc(100vh - 2rem);
        position: relative;
        overflow: hidden;
      }

      .terminal-window::before {
        content: "";
        position: absolute;
        inset: -2px;
        border-radius: 10px;
        padding: 2px;
        background: linear-gradient(
          45deg,
          rgba(0, 255, 0, 0.3),
          transparent,
          rgba(0, 255, 0, 0.3),
          transparent
        );
        mask:
          linear-gradient(#fff 0 0) content-box,
          linear-gradient(#fff 0 0);
        mask-composite: xor;
        animation: borderGlow 3s ease-in-out infinite;
      }

      @keyframes borderGlow {
        0%,
        100% {
          opacity: 0.3;
        }
        50% {
          opacity: 0.8;
        }
      }

      /* Window Title Bar */
      .window-titlebar {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 8px 16px;
        background: linear-gradient(
          90deg,
          rgba(0, 255, 0, 0.1),
          rgba(0, 255, 0, 0.05)
        );
        border-bottom: 1px solid rgba(0, 255, 0, 0.3);
        backdrop-filter: blur(5px);
      }

      .window-controls {
        display: flex;
        gap: 8px;
      }

      .control-button {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        animation: controlPulse 2s ease-in-out infinite;
      }

      .control-button.close {
        background: linear-gradient(45deg, #ff5f56, #ff4444);
        animation-delay: 0s;
      }

      .control-button.minimize {
        background: linear-gradient(45deg, #ffbd2e, #ffaa00);
        animation-delay: 0.3s;
      }

      .control-button.maximize {
        background: linear-gradient(45deg, #27ca3f, #00ff00);
        animation-delay: 0.6s;
      }

      @keyframes controlPulse {
        0%,
        100% {
          opacity: 0.7;
          transform: scale(1);
        }
        50% {
          opacity: 1;
          transform: scale(1.1);
        }
      }

      .window-title {
        flex: 1;
        text-align: center;
      }

      .system-info {
        min-width: 120px;
        text-align: right;
      }

      /* Terminal Header */
      .terminal-header {
        padding: 16px 20px;
        background: rgba(0, 0, 0, 0.6);
        border-bottom: 1px solid rgba(0, 255, 0, 0.2);
      }

      .terminal-separator {
        height: 1px;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(0, 255, 0, 0.5),
          transparent
        );
        margin-top: 12px;
        animation: separatorGlow 2s ease-in-out infinite alternate;
      }

      @keyframes separatorGlow {
        0% {
          opacity: 0.3;
        }
        100% {
          opacity: 0.8;
        }
      }

      /* Terminal Content */
      .terminal-content {
        padding: 20px;
        min-height: 60vh;
      }

      .content-area {
        position: relative;
        z-index: 5;
      }

      /* Responsive Design */
      @media (max-width: 768px) {
        .window-titlebar {
          padding: 6px 12px;
          font-size: 0.8rem;
        }

        .terminal-header {
          padding: 12px 16px;
        }

        .terminal-content {
          padding: 16px;
        }
      }

      @media (max-width: 480px) {
        .terminal-window {
          margin: 0;
          border-radius: 0;
          min-height: 100vh;
        }

        .window-controls {
          gap: 6px;
        }

        .control-button {
          width: 10px;
          height: 10px;
        }
      }
    </style>
  </body>
</html>
